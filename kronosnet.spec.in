###############################################################################
###############################################################################
##
##  Copyright (C) 2010-2017 Red Hat, Inc.  All rights reserved.
##
##  This copyrighted material is made available to anyone wishing to use,
##  modify, copy, or redistribute it subject to the terms and conditions
##  of the GNU General Public License v.2 or higher
##
###############################################################################
###############################################################################

# keep around ready for later user
%global alphatag @alphatag@
%global numcomm @numcomm@
%global dirty @dirty@

# set defaults from ./configure invokation
%@sctp@ sctp
%@nss@ nss
%@openssl@ openssl
%@zlib@ zlib
%@lz4@ lz4
%@lzo2@ lzo2
%@lzma@ lzma
%@bzip2@ bzip2
%@kronosnetd@ kronosnetd
%@libtap@ libtap
%@runautogen@ runautogen

%if %{with sctp}
%global buildsctp 1
%endif
%if %{with nss}
%global buildcryptonss 1
%endif
%if %{with openssl}
%global buildcryptoopenssl 1
%endif
%if %{with zlib}
%global buildcompresszlib 1
%endif
%if %{with lz4}
%global buildcompresslz4 1
%endif
%if %{with lzo2}
%global buildcompresslzo2 1
%endif
%if %{with lzma}
%global buildcompresslzma 1
%endif
%if %{with bzip2}
%global buildcompressbzip2 1
%endif
%if %{with libtap}
%global buildlibtap 1
%endif
%if %{with kronosnetd}
%global buildlibtap 1
%global buildkronosnetd 1
%endif
%if %{with runautogen}
%global buildautogen 1
%endif

# main (empty) package
# http://www.rpm.org/max-rpm/s1-rpm-subpack-spec-file-changes.html

Name: kronosnet
Summary: Multipoint-to-Multipoint VPN daemon
Version: @version@
Release: 1%{?numcomm:.%{numcomm}}%{?alphatag:.%{alphatag}}%{?dirty:.%{dirty}}%{?dist}
License: GPLv2+ and LGPLv2+
Group: System Environment/Base
URL: https://github.com/fabbione/kronosnet/
Source0: https://github.com/fabbione/kronosnet/archive/%{name}-%{version}%{?numcomm:.%{numcomm}}%{?alphatag:-%{alphatag}}%{?dirty:-%{dirty}}.tar.gz

## Setup/build bits

BuildRoot: %(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXX)

# Build dependencies
BuildRequires: gcc
%if %{defined buildsctp}
BuildRequires: lksctp-tools-devel
%endif
%if %{defined buildcryptonss}
BuildRequires: nss-devel
%endif
%if %{defined buildcryptoopenssl}
BuildRequires: openssl-devel
%endif
%if %{defined buildcompresszlib}
BuildRequires: zlib-devel
%endif
%if %{defined buildcompresslz4}
BuildRequires: lz4-devel
%endif
%if %{defined buildcompresslzo2}
BuildRequires: lzo-devel
%endif
%if %{defined buildcompresslzma}
BuildRequires: xz-devel
%endif
%if %{defined buildcompressbzip2}
BuildRequires: bzip2-devel
%endif
%if %{defined buildkronosnetd}
BuildRequires: libqb-devel pam-devel
%endif
%if %{defined buildautogen}
BuildRequires:  autoconf
BuildRequires:  automake
BuildRequires:  libtool
%endif

%prep
%setup -q -n %{name}-%{version}%{?numcomm:.%{numcomm}}%{?alphatag:-%{alphatag}}%{?dirty:-%{dirty}}

%build
%if %{with runautogen}
    ./autogen.sh
%endif

%{configure} \
%if %{defined buildsctp}
	--enable-libknet-sctp \
%else
	--disable-libknet-sctp \
%endif
%if %{defined buildcryptonss}
	--enable-crypto-nss \
%else
	--disable-crypto-nss \
%endif
%if %{defined buildcryptoopenssl}
	--enable-crypto-openssl \
%else
	--disable-crypto-openssl \
%endif
%if %{defined buildcompresszlib}
	--enable-compress-zlib \
%else
	--disable-compress-zlib \
%endif
%if %{defined buildcompresslz4}
	--enable-compress-lz4 \
%else
	--disable-compress-lz4 \
%endif
%if %{defined buildcompresslzo2}
	--enable-compress-lzo2 \
%else
	--disable-compress-lzo2 \
%endif
%if %{defined buildcompresslzma}
	--enable-compress-lzma \
%else
	--disable-compress-lzma \
%endif
%if %{defined buildcompressbzip2}
	--enable-compress-bzip2 \
%else
	--disable-compress-bzip2 \
%endif
%if %{defined buildkronosnetd}
	--enable-kronosnetd \
%endif
%if %{defined buildlibtap}
	--enable-libtap \
%endif
	--with-initdefaultdir=%{_sysconfdir}/sysconfig/ \
%if %{defined _unitdir}
	--with-systemddir=%{_unitdir}
%else
	--with-initddir=%{_sysconfdir}/rc.d/init.d/
%endif

make %{_smp_mflags}

%install
rm -rf %{buildroot}
make install DESTDIR=%{buildroot}

# tree cleanup
# remove static libraries
find %{buildroot} -name "*.a" -exec rm {} \;
# remove libtools leftovers
find %{buildroot} -name "*.la" -exec rm {} \;

# handle systemd vs init script
%if %{defined _unitdir}
# remove init scripts
rm -rf %{buildroot}/etc/init.d
%else
# remove systemd specific bits
find %{buildroot} -name "*.service" -exec rm {} \;
%endif

# remove docs
rm -rf %{buildroot}/usr/share/doc/kronosnet

%clean
rm -rf %{buildroot}

# main empty package
%description
kronosnet source

%if %{defined buildkronosnetd}
## Runtime and subpackages section
%package -n kronosnetd
Group: System Environment/Base
Summary: Multipoint-to-Multipoint VPN daemon
%if %{defined _unitdir}
# Needed for systemd unit
Requires(post):   systemd-sysv
Requires(post):   systemd-units
Requires(preun):  systemd-units
Requires(postun): systemd-units
%else
Requires(post): chkconfig
Requires(preun): chkconfig, initscripts
%endif
Requires(post): shadow-utils
Requires(preun): shadow-utils
Requires: pam, /etc/pam.d/passwd

%description -n kronosnetd
 The kronosnet daemon is a bridge between kronosnet switching engine
 and kernel network tap devices, to create and administer a
 distributed LAN over multipoint-to-multipoint VPNs.
 The daemon does a poor attempt to provide a configure UI similar
 to other known network devices/tools (Cisco, quagga).
 Beside looking horrific, it allows runtime changes and
 reconfiguration of the kronosnet(s) without daemon reload
 or service disruption.

%post -n kronosnetd
%if %{defined _unitdir}
 %if 0%{?systemd_post:1}
  %systemd_post kronosnetd.service
 %else
  /bin/systemctl daemon-reload >/dev/null 2>&1 || :
 %endif
%else
/sbin/chkconfig --add kronosnetd
%endif
/usr/sbin/groupadd --force --system @defaultadmgroup@

%preun -n kronosnetd
%if %{defined _unitdir}
 %if 0%{?systemd_preun:1}
  %systemd_preun kronosnetd.service
 %else
if [ "$1" -eq 0 ]; then
	/bin/systemctl --no-reload disable kronosnetd.service
	/bin/systemctl stop kronosnetd.service >/dev/null 2>&1
fi
%endif
%else
if [ "$1" = 0 ]; then
	/sbin/service kronosnetd stop >/dev/null 2>&1
	/sbin/chkconfig --del kronosnetd
fi
%endif

%files -n kronosnetd
%defattr(-,root,root,-)
%doc COPYING.* COPYRIGHT 
%dir %{_sysconfdir}/kronosnet
%dir %{_sysconfdir}/kronosnet/*
%config(noreplace) %{_sysconfdir}/sysconfig/kronosnetd
%config(noreplace) %{_sysconfdir}/pam.d/kronosnetd
%config(noreplace) %{_sysconfdir}/logrotate.d/kronosnetd
%if %{defined _unitdir}
%{_unitdir}/kronosnetd.service
%else
%config(noreplace) %{_sysconfdir}/rc.d/init.d/kronosnetd
%endif
%{_sbindir}/*
%{_mandir}/man8/*
%endif

%if %{defined buildlibtap}
%package -n libtap1
Group: System Environment/Libraries
Summary: Simple userland wrapper around kernel tap devices

%description -n libtap1
 This is an over-engineered commodity library to manage a pool
 of tap devices and provides the basic
 pre-up.d/up.d/down.d/post-down.d infrastructure.

%files -n libtap1
%defattr(-,root,root,-)
%doc COPYING.* COPYRIGHT
%{_libdir}/libtap.so.*

%post -n libtap1 -p /sbin/ldconfig

%postun -n libtap1 -p /sbin/ldconfig

%package -n libtap1-devel
Group: Development/Libraries
Summary: Simple userland wrapper around kernel tap devices (developer files)
Requires: libtap1 = %{version}-%{release}
Requires: pkgconfig

%description -n libtap1-devel
 This is an over-engineered commodity library to manage a pool
 of tap devices and provides the basic
 pre-up.d/up.d/down.d/post-down.d infrastructure.

%files -n libtap1-devel
%defattr(-,root,root,-)
%doc COPYING.* COPYRIGHT
%{_libdir}/libtap.so
%{_includedir}/libtap.h
%{_libdir}/pkgconfig/libtap.pc
%endif

%package -n libknet1
Group: System Environment/Libraries
Summary: Kronosnet core switching implementation

%description -n libknet1
 The whole kronosnet core is implemented in this library.
 Please refer to the not-yet-existing documentation for further
 information.

%files -n libknet1
%defattr(-,root,root,-)
%doc COPYING.* COPYRIGHT
%{_libdir}/libknet.so.*

%post -n libknet1 -p /sbin/ldconfig

%postun -n libknet1 -p /sbin/ldconfig

%package -n libknet1-devel
Group: Development/Libraries
Summary: Kronosnet core switching implementation (developer files)
Requires: libknet1 = %{version}-%{release}
Requires: pkgconfig

%description -n libknet1-devel
 The whole kronosnet core is implemented in this library.
 Please refer to the not-yet-existing documentation for further
 information. 

%files -n libknet1-devel
%defattr(-,root,root,-)
%doc COPYING.* COPYRIGHT
%{_libdir}/libknet.so
%{_includedir}/libknet.h
%{_libdir}/pkgconfig/libknet.pc
%{_mandir}/man3/*.3.gz

%changelog
* @date@ Autotools generated version <nobody@nowhere.org> - @version@-1-@numcomm@.@alphatag@.@dirty@
- These aren't the droids you're looking for.

